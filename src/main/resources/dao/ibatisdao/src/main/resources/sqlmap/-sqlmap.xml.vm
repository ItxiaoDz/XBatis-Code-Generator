##DAO-sqlmap-mapping生成模版
##使用到的变量有：
##$!{tbb.className}类名，如：UserInfo
##$!{tbb.objectName}对象名，如：userInfo
##$!{tbb.tableName}表名，如：user_info
##$!{tbb.colList}表字段列表
##$!{tbb.pkcol}表主键字段列表
##$!{velocityCount}循环次数
##$!{cb.propertyName}字段属性名，如：fullName
##$!{cb.colName}字段列名，如：full_name
##$!{cb.propertyType}字段属性类型名，如：String
##$!{gb.packageName}包名，如：net.letuu.order
##所有字段
#macro(allField $tbb)
    #foreach($cb in $tbb.colList)$!{cb.colNameCheck}#if(!$foreach.last) , #end#end
#end
#macro(allFieldAndValue $tbb )
    #foreach($pkcol in $tbb.colList)
        ${pkcol.colNameCheck}=#{${pkcol.propertyName},jdbcType=$!{pkcol.jdbcType}} #if(!$foreach.last) AND #end
    #end
#end
#macro(pkField $tbb $str)
    #foreach($cb in $tbb.pkcol)$!{cb.colNameCheck}#if(!$foreach.last) , #end#end
#end
#macro(pklFieldAndValue2 $tbb)
	#if(!$tbb.isMultiPk)
        ${tbb.pkcol.get(0).colNameCheck}=#{_pk,jdbcType=$tbb.pkcol.get(0).jdbcType}
    #else
    #foreach($pkcol in $tbb.pkcol)
        ${pkcol.colNameCheck}=#{${pkcol.propertyName},jdbcType=$!{pkcol.jdbcType}} #if(!$foreach.last) AND #end
    #end
    #end
#end
#macro(pklFieldAndValue $tbb)
    #foreach($pkcol in $tbb.pkcol)
        ${pkcol.colNameCheck}=#{${pkcol.propertyName}, jdbcType=$!{pkcol.jdbcType}} #if(!$foreach.last) AND #end
    #end
#end
##批量删除与查找
#macro(pklFieldAndValues $tbb)
        #if(!$tbb.isMultiPk)
            ${tbb.pkcol.get(0).colNameCheck} in 
            <foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
        #else
            (#foreach($cb in $tbb.pkcol)$!{cb.colNameCheck}#if(!$foreach.last) , #end#end) in
            <foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				(#foreach($cb in $tbb.pkcol)#{item.$!{cb.propertyName}, jdbcType=$!{cb.jdbcType}}#if(!$foreach.last) , #end#end)
			</foreach>
        #end
#end
#macro(escape $str)$str#end
#set($conf=$!{tbb.conf})
#set($PO = $!{gb.objSuffix})
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="$!{gb.packageName}.impl.mapper.${tbb.className}Mapper">
    <!-- Alias Map Defined 
    <typeAlias alias="${tbb.className}Query" type="$!{gb.packageName}.query.${tbb.className}Query"/>
    <typeAlias alias="${tbb.className}" type="$!{gb.packageName}.pojo.${tbb.className}${PO}"/>
    -->
    <resultMap id="${tbb.objectName}" type="$!{gb.packageName}.impl.model.${tbb.className}">
    #foreach($cb in $tbb.pkcol)
        <id property="$!cb.propertyName" column="$!cb.colName"/>
    #end
    #foreach($cb in $tbb.colListWithoutPk)
        <result property="$!cb.propertyName" column="$!cb.colName"/>
    #end
    </resultMap>
    <sql id="Base_Column_List">
		#allField( $tbb )
	</sql>
	<!--查询条件 -->
	<sql id="selectParams">
        <where>
#foreach($cb in $tbb.colList)
#if($cb.propertyType !="Date" )
			<if test="$!cb.propertyName != null and $!cb.propertyName != ''">
	            AND $!{cb.colNameCheck}=#{$!{cb.propertyName}, jdbcType=$!{cb.jdbcType}}
	        </if>
#elseif(${cb.colName}!=${conf.addField} && ${cb.colName}!=${conf.updField})
            <if test="$!{cb.propertyName}Start != null">
                AND <![CDATA[  $!{cb.colNameCheck} >= #{$!{cb.propertyName}Start, jdbcType=$!{cb.jdbcType}} ]]>
            </if>
            <if test="$!{cb.propertyName}End != null">
                AND <![CDATA[  $!{cb.colNameCheck} <= #{$!{cb.propertyName}End, jdbcType=$!{cb.jdbcType}} ]]>
            </if>
            <if test="$!{cb.propertyName}Equal != null">
                AND <![CDATA[  $!{cb.colNameCheck} = #{$!{cb.propertyName}Equal, jdbcType=$!{cb.jdbcType}} ]]>
            </if>
#end
#end
        </where>
    </sql>

    #if($conf.isGetByKey())
        <!-- 根据主键查询 -->
        <select id="selectByPrimaryKey" resultMap="${tbb.objectName}">
           ##POJO对象上没有Field属性所以选择selector会抛出异常,临时解决
           SELECT   <include refid="Base_Column_List" />  FROM ${tbb.tableName}
                WHERE
           #pklFieldAndValue2( $tbb )
        </select>
    #end
    #if($conf.isGetByKeys())
    	<!-- 根据多个主键查询 -->
        <select id="selectByKeys" resultMap="${tbb.objectName}"  parameterType="hashMap">
            SELECT   <include refid="Base_Column_List" />  FROM ${tbb.tableName}
                WHERE
            #pklFieldAndValues($tbb)
        
        </select>
    #end

    #if($conf.isDelByKey())
        <!-- 根据主键删除 -->
        <delete id="deleteByPrimaryKey">
            DELETE FROM ${tbb.tableName}
                WHERE
            #pklFieldAndValue2( $tbb )
        </delete>
    #end

    #if($conf.isDelByKeys())
    <delete id="deleteByKeys">
        DELETE FROM ${tbb.tableName}
            WHERE
        #pklFieldAndValues($tbb)
    </delete>
    #end
	
##假设没有数据变化则不会产生io操作
##去除更新时间插入时间的字段,有数据变更，时间修改交给数据库执行
    #if($conf.isUpdateKeySelective())
        <!-- 根据主键更新 -->
		<update id="updateByPrimaryKeySelective" parameterType="$!{gb.packageName}.impl.model.${tbb.className}">
	        UPDATE ${tbb.tableName}
	        <set>
#foreach($cb in $tbb.colList)
#if(${cb.colName}!=${conf.addField} && ${cb.colName}!=${conf.updField})
                <if test="$!cb.propertyName != null and $!cb.propertyName != ''">
                    $cb.colNameCheck = #{$!{cb.propertyName}, jdbcType=$!{cb.jdbcType}},
                </if>
#end
#end
	        </set>
	        WHERE
	        #pklFieldAndValue( $tbb )
	        
	    </update>
    #end
    #if($conf.isUpdateKey())
        <!-- 根据主键更新（包括为空） -->
		<update id="updateByPrimaryKey" parameterType="$!{gb.packageName}.impl.model.${tbb.className}">
	        UPDATE ${tbb.tableName}
	        <set>
#foreach($cb in $tbb.colList)
#if(${cb.colName}!=${conf.addField} && ${cb.colName}!=${conf.updField})
                $cb.colNameCheck = #{$!{cb.propertyName}, jdbcType=$!{cb.jdbcType}},
#end
#end
	        </set>
	        WHERE
	        #pklFieldAndValue( $tbb )
	        
	    </update>
    #end
    
    <!-- 搜索列表信息 -->
	<select id="selectList" parameterType="map" resultMap="${tbb.objectName}">
		select
		<include refid="Base_Column_List" />
		from ${tbb.tableName}
		<include refid="selectParams" />
	</select>
	
	<!-- 搜索分页列表信息 -->
	<select id="selectListByPage" parameterType="map" resultMap="${tbb.objectName}">
		select
		<include refid="Base_Column_List" />
		from ${tbb.tableName}
		<include refid="selectParams" />
	</select>
    
    ##add代码
    <!--保存所有字段 -->
    <insert id="insert" parameterType="$!{gb.packageName}.impl.model.${tbb.className}">
		INSERT INTO ${tbb.tableName}(
#foreach($cb in $tbb.colList)
#if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
            $!{cb.colName.trim()}#if(!$foreach.last), #end
#else
        	$!{cb.colNameCheck.trim()}#if(!$foreach.last), #end  
#end
#end 	
		)
		VALUES(
#foreach($cb in $tbb.colList)
#if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
            now()#if(!$foreach.last), #end
#else
			#{$!{cb.propertyName.trim()},jdbcType=$!{cb.jdbcType}}#if(!$foreach.last), #end
#end
#end
		)
	</insert>
	
	<!--批量保存所有字段 -->
	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO ${tbb.tableName}(
#foreach($cb in $tbb.colList)
#if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
            $!{cb.colName.trim()}#if(!$foreach.last), #end
#else
        	$!{cb.colNameCheck.trim()}#if(!$foreach.last), #end  
#end
#end 
		)
		VALUES
		<foreach collection="list" item="item" separator="," index="index">
			(
#foreach($cb in $tbb.colList)
#if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
            now()#if(!$foreach.last), #end
#else
			#{item.$!{cb.propertyName.trim()},jdbcType=$!{cb.jdbcType}}#if(!$foreach.last), #end
#end
#end
			)
		</foreach>
	</insert>
    
    <!--保存所有不为空的字段 -->
    <insert id="insertSelective" parameterType="$!{gb.packageName}.impl.model.${tbb.className}" >
        INSERT INTO ${tbb.tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
##循环所有字段
#foreach($cb in $tbb.colList)
#if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
            $!{cb.colName.trim()},
#else
            <if test="$!cb.propertyName != null and $!cb.propertyName != ''">
                $!{cb.colNameCheck.trim()},
            </if >
#end
#end
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($cb in $tbb.colList)
#if($!{cb.colName}==${conf.addField} ||$!{cb.colName}==${conf.updField})
            now(),
#else
            <if test="$!cb.propertyName != null and $!cb.propertyName != ''">
                    #{$!{cb.propertyName.trim()},jdbcType=$!{cb.jdbcType}},
            </if >
#end
#end
        </trim>
    </insert>
       
##定制产生select方法。
#if($conf.selectMap.size()>0)
#foreach($sel in $conf.selectMap.keySet())
#if( $conf.selectMap.get($sel) && $conf.selectMap.get($sel).size()>0)
    <select id="$sel" resultMap="${tbb.objectName}"  parameterType="hashMap">
        SELECT   <include refid="Base_Column_List" />  FROM ${tbb.tableName}
        where #foreach($w in $conf.selectMap.get($sel))
        #if($!{tbb.colMap.get($w)})
 #if(!$foreach.first) and #end $w=#{${tbb.colMap.get($w).propertyName},jdbcType=$!{tbb.colMap.get($w).jdbcType}}
#end
#end
	</select>
                #end
            #end
        #end
        
</mapper>
