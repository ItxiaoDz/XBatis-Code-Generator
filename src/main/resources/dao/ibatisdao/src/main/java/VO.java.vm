##DO代码生成模版
##使用到的变量有：
##$!{gb.packageName}包名，如：com.taobao.trip.agent
##$!{gb.userName}机器登录用户名，如：yingyang
##$!{gb.nowDate}当前日期，如：2011-10-14
##$!{tbb.className}类名，如：AgentAppForm
##$!{tbb.colList}表字段列表
##$!{cb.propertyName}字段属性名，如：fullName
##$!{cb.methodName}字段方法名，如：FullName
##$!{cb.propertyType}字段属性类型名，如：String
##$!{cb.colComment}字段注释，如：姓名全称
#set($VO = $!{gb.voSuffix})
#set($conf=$!{tbb.conf})
#set($bigDecimal=false)
#set($Date=false)
package $!{gb.packageName}.api.domain.vo;

import java.util.*;
#foreach($cb in $tbb.colList)
#if($!{cb.propertyType}=="Clob"&&!$clob)
import java.sql.Clob;
#set($clob=true)
#elseif($!{cb.propertyType}=="Blob"&&!$blob)
import java.sql.Blob;
#set($blob=true)
#elseif($!{cb.propertyType}=="Date"&&$!Date)
import java.util.Date;
#set($Date=true)
#elseif($!{cb.propertyType}=="BigDecimal"&&!$bigDecimal)
import java.math.BigDecimal;
#set($bigDecimal=true)
#end
#end
#if(!$!{tbb.isMultiPk})
import com.stframework.core.common.api.domain.vo.BaseVO; 
#end
import java.io.Serializable;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
/**
 * <br>类描述:
 * <br>功能详细描述:
 * @author  $!{gb.userName}
 * @date  [$!{gb.nowDate}]
 */
@Data
@ApiModel
public class $!{tbb.className}${VO} extends #if($!{tbb.isMultiPk})$!{tbb.className}Key${VO} #else BaseVO #end{

    /**
	 *序列化ID
	 */
	private static final long serialVersionUID = 1L;

#if(!$!{tbb.isMultiPk})
#foreach($cb in $tbb.pkcol)
	/**
     * $!{cb.colComment}
     */
    @ApiModelProperty(value = "$!{cb.colComment}")
    private $!{cb.propertyType} $!{cb.propertyName};
#end 
#end

#foreach($cb in $tbb.colListWithoutPk)
	/**
     * $!{cb.colComment}
     */
    @ApiModelProperty(value = "$!{cb.colComment}")
    private $!{cb.propertyType} $!{cb.propertyName};
#end

#if($conf.isUpdateObj())
	/**
     * 需要更新时的代码，keys 代表主键list
     */
	private List<Long> keys;
#end
#if($conf.isSplitTable())
    /**
    * 分表使用
    */
    private String tableId;
#end

	@Override
    public String toString() {
 		return super.toString();
 	}
}