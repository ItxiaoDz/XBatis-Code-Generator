##Mapper基础接口
##使用到的变量有：
##$!{gb.packageName}包名，如：net.letuu.order
##$!{gb.userName}机器登录用户名，如：microboss
##$!{gb.nowDate}当前日期，如：2013-05-02
##$!{tbb.className}类名，如：UserInfo
##$!{tbb.objectName}对象名，如：userInfo

package $!{gb.packageName}.mapper;

import java.util.List;

/**
 * <br>类描述:Mapper基础接口
 * <br>功能详细描述:
 *
 * @author $!{gb.userName}
 */
 public interface STBaseMapper <T,Q,P> {
 	/**
	 * 根据id删除
	 * @param id
	 * @return
	 */
	int deleteByPrimaryKey(P id);
	/**
	 * 根据id批量删除
	 * @param ids
	 * @return
	 */
	public Integer deleteByKeys(List<P> ids);
	/**
	 * 保存
	 * @param record
	 * @return
	 */
	int insert(T record);
	/**
	 * 保存不为空选项
	 * @param record
	 * @return
	 */
	int insertSelective(T record);
	/**
	 * 批量插入
	 * @param list
	 * @return
	 */
	int batchInsert(List<T> list);
	/**
	 * 根据id搜索
	 * @param id
	 * @return
	 */
	T selectByPrimaryKey(P id);
	/**
	 * 根据id批量搜索
	 * @param ids
	 * @return
	 */
	List<T> selectByKeys(List<P> ids);
	
	/**
	 * 根据id更新所有值（包括空值）
	 * @param record
	 * @return
	 */
	int updateByPrimaryKey(T record);
	/**
	 * 根据id更新所选项
	 * @param record
	 * @return
	 */
	int updateByPrimaryKeySelective(T record);
	/**
	 * 批量更新
	 * @param list
	 * @return
	 */
	int batchUpdate(List<T> list);
	/**
	 * 根据查询类查询分页内容
	 * @param record
	 * @return
	 */
	List<T> selectListByPage(Q params);
	/**
	 * 根据查询类查询内容（不分页）
	 * @param record
	 * @return
	 */
	List<T> selectList(Q params);
 } 

